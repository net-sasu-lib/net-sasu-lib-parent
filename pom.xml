<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.sasu.lib</groupId>
    <artifactId>net-sasu-lib-parent</artifactId>
    <version>1.0.1-1</version>
    <packaging>pom</packaging>
    <url>https://net.sasu.lib</url>

    <description>Parent Maven project for all net.sasu.lib libraries.</description>

    <scm>
        <connection>scm:https://${git.server}/${git.group.id}/${project.artifactId}.git</connection>
        <developerConnection>scm:jgit:git@${git.server}:${git.group.id}/${project.artifactId}.git</developerConnection>
        <url>https://${git.server}/${git.group.id}/${project.artifactId}</url>
    </scm>

    <developers>
        <developer>
            <name>Sasu Welling</name>
            <email>lib@sasu.net</email>
            <organization>Sasu Welling</organization>
            <organizationUrl>https://lib.sasu.net</organizationUrl>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>Zero-Clause BSD License</name>
            <url>https://opensource.org/licenses/0BSD</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <junit.jupiter.version>5.12.1</junit.jupiter.version>
        <jacoco.version>0.8.12</jacoco.version>
        <mockito.version>5.16.1</mockito.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.release>17</maven.compiler.release>

        <doxiaVersion>2.0.0</doxiaVersion>
        <doxiaSitetoolsVersion>2.0.0</doxiaSitetoolsVersion>

        <fluidoSkinVersion>2.0.0</fluidoSkinVersion>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Testing dependencies -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>3.0</version>
                <scope>test</scope>
            </dependency>

            <!-- Doxia dependencies -->
            <dependency>
                <groupId>org.apache.maven.doxia</groupId>
                <artifactId>doxia-sink-api</artifactId>
                <version>${doxiaVersion}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Other Doxia dependencies follow the same pattern -->
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.14.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.5.2</version>
                    <configuration>
                        <argLine>-javaagent:${settings.localRepository}/org/mockito/mockito-core/${mockito.version}/mockito-core-${mockito.version}.jar</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.11.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.1.4</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Only include plugins that need to be executed -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <!-- Other necessary plugin executions -->
        </plugins>
    </build>

    <dependencies>
        <!-- Include actual dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <!-- Other dependencies -->
    </dependencies>

    <profiles>
        <!-- Deployment profiles. The profile is determined by
        1. release target (central/staging), i.e. Maven Central or Staging Repo testing
        2. deployment type (snapshot/release)
        As profile activatation in Maven 3.x is not possible with multiple properties,
        the properties are combined.
        -->
        <!-- Profile to publish to Maven Central -->
        <!-- mvn deploy -DreleaseTargetAndDeploymentType=central-release -->
        <profile>
            <id>central-release</id>
            <activation>
                <property>
                    <name>releaseTargetAndDeploymentType</name>
                    <value>central-release</value>
                </property>
            </activation>
            <distributionManagement>
                <repository>
                    <id>sonatype-nexus-releases</id>
                    <url>https://central.sonatype.com</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.central</groupId>
                        <artifactId>central-publishing-maven-plugin</artifactId>
                        <version>0.7.0</version>
                        <extensions>true</extensions>
                        <configuration>
                            <skipPublishing>false</skipPublishing>
                            <publishingServerId>central</publishingServerId>
                            <autoPublish>true</autoPublish>
                            <waitUntil>published</waitUntil>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile for deploying snapshots to staging repo -->
        <!-- mvn deploy -DreleaseTargetAndDeploymentType=staging-snapshot -->
        <profile>
            <id>staging-snapshot</id>
            <activation>
                <property>
                    <name>releaseTargetAndDeploymentType</name>
                    <value>staging-snapshot</value>
                </property>
                <activeByDefault>true</activeByDefault>
            </activation>
            <distributionManagement>
                <repository>
                    <id>nexus-snapshots-repo</id>
                    <url>${repo.nexus.server}/repository/maven-snapshots/</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                            <repositoryId>nexus-snapshots-repo</repositoryId>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile for deploying releases to staging repo -->
        <!-- mvn deploy -DreleaseTargetAndDeploymentType=staging-release -->
        <profile>
            <id>staging-release</id>
            <activation>
                <property>
                    <name>releaseTargetAndDeploymentType</name>
                    <value>staging-release</value>
                </property>
            </activation>
            <distributionManagement>
                <repository>
                    <id>nexus-releases-repo</id>
                    <url>${repo.nexus.server}/repository/maven-releases/</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                            <repositoryId>nexus-releases-repo</repositoryId>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <version>3.1.1</version>
                        <configuration>
                            <providerImplementations>
                                <git>jgit</git>
                            </providerImplementations>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.maven.scm</groupId>
                                <artifactId>maven-scm-provider-jgit</artifactId>
                                <version>2.1.0</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>